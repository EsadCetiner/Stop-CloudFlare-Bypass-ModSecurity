SecRule &REQUEST_HEADERS:cf-ray "@eq 0" \
   "id:860000,\
    phase:1,\
    deny,\
    log,\
    msg:'Cloudflare WAF Bypass attempt.',\
    severity:'CRITICAL'"

SecRule &REQUEST_HEADERS:cf-connecting-ip "@eq 0" \
   "id:860001,\
    phase:1,\
    deny,\
    log,\
    msg:'Cloudflare WAF Bypass attempt.',\
    severity:'CRITICAL'"

SecRule &REQUEST_HEADERS:cf-ipcountry "@eq 0" \
   "id:860002,\
    phase:1,\
    deny,\
    log,\
    msg:'Cloudflare WAF Bypass attempt.',\
    severity:'CRITICAL'"

SecRule &REQUEST_HEADERS:cdn-loop "&eq 0" \
   "id:860003,\
    phase:1,\
    deny,\
    log,\
    msg:'Cloudflare WAF Bypass attempt.',\
    severity:'CRITICAL'"

SecRule &REQUEST_HEADERS:cf-visitor "@eq 0" \
   "id:860004,\
    phase:1,\
    deny,\
    log,\
    msg:'Cloudflare WAF Bypass attempt.',\
    severity:'CRITICAL'"

SecRule &REQUEST_HEADERS:x-forwarded-proto "@eq 0" \
   "id:860005,\
    phase:1,\
    deny,\
    log,\
    msg:'Cloudflare WAF Bypass attempt.',\
    severity:'CRITICAL'"

SecRule &REQUEST_HEADERS:x-forwarded-for "@eq 0" \
   "id:860006,\
    phase:1,\
    deny,\
    log,\
    msg:'Cloudflare WAF Bypass attempt.',\
    severity:'CRITICAL'"
    
#I recommend creating a custom transform rule under "HTTP Request Header Modification", This will act as a Token for Cloudflare to authenticate itself with
#Make sure to generate the Request header's name with a password manager since it's essentially a password
#SecRule &REQUEST_HEADERS:X-Token-yourIDHERE "@eq 0" \
#   "id:860007,\
#    phase:1,\
#    deny,\
#    log,\
#    msg:'Cloudflare WAF Bypass attempt.',\
#    severity:'CRITICAL'"
